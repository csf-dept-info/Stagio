@using Stagio.Domain.Application
@model Stagio.Web.ViewModels.Student.CreateProfile

@{
    ViewBag.Title = "Create profile";
}

<h2 id="student-create-profile-page">@WebMessage.StudentMessage.PROFILE_CREATION_TITLE</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@WebMessage.StudentMessage.STUDENT</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="panel panel-primary">
            <div class="panel-heading">@WebMessage.StudentMessage.PERSONAL_INFOS</div>
            <div class="panel-body">

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Identifier, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Identifier, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Identifier, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-primary">
            <div class="panel-heading">@WebMessage.GeneralMessage.PASSWORD</div>
            <div class="panel-body">

                <div class="form-group">
                    @Html.LabelFor(model => model.NewPassword, new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>



            </div>
            <div class="panel-footer">
                <input type="submit" value=@WebMessage.GeneralMessage.SAVE class="btn btn-primary" id="submit-create-profile" />
            </div>
        </div>
    </div>
}

@if (Request.IsAuthenticated)
{
    if (User.IsInRole(RoleNames.Student))
    {
        Response.Redirect(Url.Action(MVC.Student.Index(), MVC.Student.Name));
    }

    if (User.IsInRole(RoleNames.Employee))
    {
        Response.Redirect(Url.Action(MVC.Employee.Index(), MVC.Employee.Name));
    }
    if (User.IsInRole(RoleNames.Coordinator))
    {
        Response.Redirect(Url.Action(MVC.Coordinator.Index(), MVC.Coordinator.Name));
    }
}

<div>
    @Html.ActionLink(WebMessage.GeneralMessage.BACK, MVC.Student.Index(), new { @class = "btn btn-default" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
